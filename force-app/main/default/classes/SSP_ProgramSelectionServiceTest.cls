/***************************************************************************************************
*   Type        :   Controller Class
*   Name        :   SSP_ProgramSelectionService
*   Create By   :   Suresh
*   Create Date :   August-6-2020
*   Description :   Test class for SSP_ProgramSelectionService.
*   Modification Log:
*   
*
*****************************************************************************************************/
@isTest(seeAllData=false)
public class SSP_ProgramSelectionServiceTest{
    @testSetup
    public static void initialDataSetup() {
        insert new LOG_LogMessageSettings__c(
            Name = RE_GlobalConstants.LOGS_DEFAULT_AUTOGENERATED,
            LOG_Debug__c = true,
            LOG_Error__c= true,
            LOG_Info__c = true,
            LOG_Warning__c = true,
            LOG_Log_Purge__c = 365
        );
        Id sCitizenAccRecTypeId = SSP_Utility.getRecrodTypeIdBySobjectAndDevName('Contact','Citizen');
        contact con1 = SSP_TestDataFactory.createContactRecord('Test', 'Test', 'test@tester.com', sCitizenAccRecTypeId, true);
        List<Account> lstAcc = SSP_TestDataFactory.createAccounts(1, false);
        lstAcc[0].Name = 'AuthrepController';
        lstAcc = ESAPI.accessController().insertAsUser(lstAcc, SSP_Utility.getFieldsNamesList (lstAcc)).getInsertedObjects();
        List<SSP_Application__c> lstAppln = SSP_TestDataFactory.createSSPApplications(1, false);
        lstAppln[0].Account__c=lstAcc[0].Id;        
        lstAppln[0].Contact__c = con1.Id;
        lstAppln= ESAPI.accessController().insertAsUser(lstAppln, SSP_Utility.getFieldsNamesList (lstAppln)).getInsertedObjects();
        
        List<SSP_Member__c> lstMem = SSP_TestDataFactory.createSSPMembers(1, false);
        lstMem[0].contact__c=con1.Id;  
        lstMem[0].PrimaryPhoneExtension__c ='7348789790';
        lstMem[0].PrimaryPhoneNumber__c ='8983838290';
        lstMem = ESAPI.accessController().insertAsUser(lstMem, SSP_Utility.getFieldsNamesList (lstMem)).getInsertedObjects();
        List<SSP_ApplicationIndividual__c> lstAppInd = SSP_TestDataFactory.createApplicationIndividuals(1, false); 
        lstAppInd[0].SSP_Application__c=lstAppln[0].Id;
        lstAppInd[0].SSP_Member__c=lstMem[0].Id;
        lstAppInd = ESAPI.accessController().insertAsUser(lstAppInd, SSP_Utility.getFieldsNamesList (lstAppInd)).getInsertedObjects();
    }
    
    @isTest
    public static void unitTest1() {
        test.startTest();
        List<Account> lstAcc = [SELECT Id FROM Account ];
        List<Contact> lstCnt = [SELECT Id FROM Contact ];
        map<String,Object> mapObj = SSP_ProgramSelectionService.invokeAccountCreationService(lstAcc, lstCnt, lstCnt[0].Id);
        SSP_Member__c mbr = [SELECT Id FROM SSP_Member__c Limit 1];
        SSP_ProgramSelectionService.getProgsAppIndividual(mbr.Id);
        SSP_Application__c  app = [SELECT Id FROM SSP_Application__c LIMIT 1];
        SSP_ProgramSelectionService.getApplicationData(app.Id);
        SSP_ProgramSelectionService.getMemberData(mbr.Id);
        //SSP_ProgramSelectionService.setAvailablePrograms();
        Map<String, String> mapDtl = new Map<String, String>();
        mapDtl.put(app.Id, app.Id);
        SSP_ProgramSelectionService.getApplicablePrograms(mapDtl, [SELECT Id FROM SSP_Application__c], new Map<String, String>());
        SSP_ProgramSelectionService.resetDashboardRefreshFlag(lstCnt[0].Id);
        SSP_ProgramSelectionService.invokeManualRecCreation(lstCnt[0], app);
        SSP_ProgramSelectionService.constructProgramsString('test,test1');
        SSP_ProgramSelectionService.queryContactDetails(new Map<String, String>());
        test.stopTest();
        
    }
}